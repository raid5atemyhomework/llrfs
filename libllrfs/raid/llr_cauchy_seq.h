/*
Copyright 2022 raid5atemyhomework

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
#pragma once
#if !defined(RAID_LLR_CAUCHY_SEQ_H_)
#define RAID_LLR_CAUCHY_SEQ_H_

/*
This module provides the Cauchy matrix to use for
calculating parity blocks beyond the first.
We support up to widths of 128 devices, with up to
128 parity.

More specifically, this module provides the C, D, X,
and Y sequences to be used to generate the Generalized
Cauchy matrix.

The sequences are generated by a separate program,
which is supposed to optimize for the weight of
performing XORs.
*/

/** llr_cauchy_seq_c, llr_cauchy_seq_d,
 * llr_cauchy_seq_x, llr_cauchy_seq_y
 *
 * @brief Sequences of `GF(2^8)` elements to be used
 * to generate the Generalized Cauchy matrix.
 *
 * @desc A Generalized Cauchy matrix has elements equal
 * to `(C[i] * D[j]) / (X[i] - Y[j])`.
 * Sequences X and Y have to have unique, non-repeating
 * entries, i.e. no single `GF(2^8)` repeats in X or Y,
 * and no entry in X also exists in Y, but sequences C
 * and D are not related.
 *
 * Note that in *this* library, [i] is 0-based column
 * index, [j] is 0-based row index.
 */
extern unsigned char const llr_cauchy_seq_c[128];
extern unsigned char const llr_cauchy_seq_d[128];
extern unsigned char const llr_cauchy_seq_x[128];
extern unsigned char const llr_cauchy_seq_y[128];

/*
See this paper for more details on various Cauchy matrix
variants:
http://www.m-hikari.com/ijcms/ijcms-2012/45-48-2012/brarIJCMS45-48-2012.pdf
"On Generator Cauchy Matrices of GDRS/GTRS Codes"
Vinocha, Bhullar, Brar
*/

#endif /* !defined(RAID_LLR_CAUCHY_SEQ_H_) */
